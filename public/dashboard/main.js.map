{"version":3,"sources":["webpack:///../api/api.module.ts","webpack:///../api/api/api.ts","webpack:///../api/api/security.service.ts","webpack:///../api/api/users.service.ts","webpack:///../api/configuration.ts","webpack:///../api/encoder.ts","webpack:///../api/index.ts","webpack:///../api/variables.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api/api-configuration.ts","webpack:///./src/app/api/api-interceptor.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/buttons/button-circle/button-circle.component.html","webpack:///./src/app/core/buttons/button-circle/button-circle.component.scss","webpack:///./src/app/core/buttons/button-circle/button-circle.component.ts","webpack:///./src/app/core/buttons/button-icon/button-icon.component.html","webpack:///./src/app/core/buttons/button-icon/button-icon.component.scss","webpack:///./src/app/core/buttons/button-icon/button-icon.component.ts","webpack:///./src/app/core/buttons/button/button.component.html","webpack:///./src/app/core/buttons/button/button.component.scss","webpack:///./src/app/core/buttons/button/button.component.ts","webpack:///./src/app/core/buttons/buttons.module.ts","webpack:///./src/app/core/card/card-actions/card-actions.component.html","webpack:///./src/app/core/card/card-actions/card-actions.component.scss","webpack:///./src/app/core/card/card-actions/card-actions.component.ts","webpack:///./src/app/core/card/card-content/card-content.component.html","webpack:///./src/app/core/card/card-content/card-content.component.scss","webpack:///./src/app/core/card/card-content/card-content.component.ts","webpack:///./src/app/core/card/card-footer/card-footer.component.html","webpack:///./src/app/core/card/card-footer/card-footer.component.scss","webpack:///./src/app/core/card/card-footer/card-footer.component.ts","webpack:///./src/app/core/card/card-header/card-header.component.html","webpack:///./src/app/core/card/card-header/card-header.component.scss","webpack:///./src/app/core/card/card-header/card-header.component.ts","webpack:///./src/app/core/card/card.module.ts","webpack:///./src/app/core/card/card/card.component.html","webpack:///./src/app/core/card/card/card.component.scss","webpack:///./src/app/core/card/card/card.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/core.service.ts","webpack:///./src/app/core/form/base-form-control/base-form-control.component.css","webpack:///./src/app/core/form/base-form-control/base-form-control.component.html","webpack:///./src/app/core/form/base-form-control/base-form-control.component.ts","webpack:///./src/app/core/form/form.module.ts","webpack:///./src/app/core/form/form/form.component.html","webpack:///./src/app/core/form/form/form.component.scss","webpack:///./src/app/core/form/form/form.component.ts","webpack:///./src/app/core/form/input/input.component.html","webpack:///./src/app/core/form/input/input.component.scss","webpack:///./src/app/core/form/input/input.component.ts","webpack:///./src/app/core/form/label/label.component.html","webpack:///./src/app/core/form/label/label.component.scss","webpack:///./src/app/core/form/label/label.component.ts","webpack:///./src/app/core/toast/toast-types.enum.ts","webpack:///./src/app/core/toast/toast.component.html","webpack:///./src/app/core/toast/toast.component.scss","webpack:///./src/app/core/toast/toast.component.ts","webpack:///./src/app/core/toast/toast.module.ts","webpack:///./src/app/core/toast/toast.service.ts","webpack:///./src/app/dashboard/dashboard-routing.module.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/home/home.component.html","webpack:///./src/app/dashboard/home/home.component.scss","webpack:///./src/app/dashboard/home/home.component.ts","webpack:///./src/app/dashboard/layout/layout.module.ts","webpack:///./src/app/dashboard/layout/menu/menu-item/menu-item.component.html","webpack:///./src/app/dashboard/layout/menu/menu-item/menu-item.component.scss","webpack:///./src/app/dashboard/layout/menu/menu-item/menu-item.component.ts","webpack:///./src/app/dashboard/layout/menu/menu.module.ts","webpack:///./src/app/dashboard/layout/menu/menu/menu.component.html","webpack:///./src/app/dashboard/layout/menu/menu/menu.component.scss","webpack:///./src/app/dashboard/layout/menu/menu/menu.component.ts","webpack:///./src/app/dashboard/layout/menu/menu/menu.service.ts","webpack:///./src/app/dashboard/layout/top-bar/top-bar.component.html","webpack:///./src/app/dashboard/layout/top-bar/top-bar.component.scss","webpack:///./src/app/dashboard/layout/top-bar/top-bar.component.ts","webpack:///./src/app/dashboard/users/users-edit/users-edit.component.html","webpack:///./src/app/dashboard/users/users-edit/users-edit.component.scss","webpack:///./src/app/dashboard/users/users-edit/users-edit.component.ts","webpack:///./src/app/dashboard/users/users-list/users-list.component.html","webpack:///./src/app/dashboard/users/users-list/users-list.component.scss","webpack:///./src/app/dashboard/users/users-list/users-list.component.ts","webpack:///./src/app/dashboard/users/users-list/users-list.service.ts","webpack:///./src/app/dashboard/users/users-new/users-new.component.html","webpack:///./src/app/dashboard/users/users-new/users-new.component.scss","webpack:///./src/app/dashboard/users/users-new/users-new.component.ts","webpack:///./src/app/dashboard/users/users-new/users-new.service.ts","webpack:///./src/app/dashboard/users/users-routing.module.ts","webpack:///./src/app/dashboard/users/users.module.ts","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.scss","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/security/auth.guard.ts","webpack:///./src/app/security/login.guard.ts","webpack:///./src/app/security/login/login.component.html","webpack:///./src/app/security/login/login.component.scss","webpack:///./src/app/security/login/login.component.ts","webpack:///./src/app/security/security-routing.module.ts","webpack:///./src/app/security/security.component.html","webpack:///./src/app/security/security.component.scss","webpack:///./src/app/security/security.component.ts","webpack:///./src/app/security/security.module.ts","webpack:///./src/app/security/security.service.ts","webpack:///./src/app/security/user/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Configuration } from './configuration';\n\nimport { SecurityService } from './api/security.service';\nimport { UsersService } from './api/users.service';\n\n@NgModule({\n  imports:      [ CommonModule, HttpClientModule ],\n  declarations: [],\n  exports:      [],\n  providers: [\n    SecurityService,\n    UsersService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        }\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import your base AppModule only.');\n        }\n    }\n}\n","export * from './security.service';\nimport { SecurityService } from './security.service';\nexport * from './users.service';\nimport { UsersService } from './users.service';\nexport const APIS = [SecurityService, UsersService];\n","/**\n * MEANS\n * Api dla MEANS\n *\n * OpenAPI spec version: 1.0.0\n * Contact: jarek.frydrych@gmail.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { CurrentUserView } from '../model/currentUserView';\nimport { LoginParameters } from '../model/loginParameters';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class SecurityService {\n\n    protected basePath = 'http://localhost/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (let consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Pobieranie danych zalogowanego użytkownika\n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public currentUserQuery(observe?: 'body', reportProgress?: boolean): Observable<CurrentUserView>;\n    public currentUserQuery(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CurrentUserView>>;\n    public currentUserQuery(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CurrentUserView>>;\n    public currentUserQuery(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        let httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set(\"Accept\", httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n\n        return this.httpClient.get<CurrentUserView>(`${this.basePath}/security/current`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Logowanie do aplikacji\n     * \n     * @param content Dane logowania użytkownika\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public loginHandler(content: LoginParameters, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public loginHandler(content: LoginParameters, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public loginHandler(content: LoginParameters, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public loginHandler(content: LoginParameters, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (content === null || content === undefined) {\n            throw new Error('Required parameter content was null or undefined when calling loginHandler.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        let httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set(\"Accept\", httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n        let httpContentTypeSelected:string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set(\"Content-Type\", httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/security/login`,\n            content,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Wylogowanie z aplikacji\n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public logoutHandler(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public logoutHandler(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public logoutHandler(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public logoutHandler(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        let httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set(\"Accept\", httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/security/logout`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * MEANS\n * Api dla MEANS\n *\n * OpenAPI spec version: 1.0.0\n * Contact: jarek.frydrych@gmail.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { UserDetailsView } from '../model/userDetailsView';\nimport { UserNew } from '../model/userNew';\nimport { UsersListView } from '../model/usersListView';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class UsersService {\n\n    protected basePath = 'http://localhost/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (let consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Pobieranie wybranego użytkownika\n     *\n     * @param id Identyfikator użytkownika\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userDetailsQuery(id: string, observe?: 'body', reportProgress?: boolean): Observable<UserDetailsView>;\n    public userDetailsQuery(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<UserDetailsView>>;\n    public userDetailsQuery(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<UserDetailsView>>;\n    public userDetailsQuery(id: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling userDetailsQuery.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        let httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set(\"Accept\", httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n\n        return this.httpClient.get<UserDetailsView>(`${this.basePath}/users/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Tworzenie usera\n     *\n     * @param content Dane usera\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userNewHandler(content: UserNew, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public userNewHandler(content: UserNew, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public userNewHandler(content: UserNew, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public userNewHandler(content: UserNew, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (content === null || content === undefined) {\n            throw new Error('Required parameter content was null or undefined when calling userNewHandler.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        let httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set(\"Accept\", httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n        let httpContentTypeSelected:string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set(\"Content-Type\", httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/users`,\n            content,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Pobieranie listy userów\n     *\n     * @param page Numer aktualnie wyświetlanej strony\n     * @param count Liczba rekordów wyświetlanych na stronie\n     * @param sortDirection Kierunek sortowania (rosnąco, malejąco)\n     * @param sortOrder Kolumna, według której nastąpi sortowanie danych\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public usersListQuery(page?: number, count?: number, sortDirection?: string, sortOrder?: string, observe?: 'body', reportProgress?: boolean): Observable<UsersListView>;\n    public usersListQuery(page?: number, count?: number, sortDirection?: string, sortOrder?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<UsersListView>>;\n    public usersListQuery(page?: number, count?: number, sortDirection?: string, sortOrder?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<UsersListView>>;\n    public usersListQuery(page?: number, count?: number, sortDirection?: string, sortOrder?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (count !== undefined) {\n            queryParameters = queryParameters.set('count', <any>count);\n        }\n        if (sortDirection !== undefined) {\n            queryParameters = queryParameters.set('sort_direction', <any>sortDirection);\n        }\n        if (sortOrder !== undefined) {\n            queryParameters = queryParameters.set('sort_order', <any>sortOrder);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        let httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set(\"Accept\", httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        let consumes: string[] = [\n        ];\n\n        return this.httpClient.get<UsersListView>(`${this.basePath}/users`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param {string[]} contentTypes - the array of content types that are available for selection\n     * @returns {string} the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param {string[]} accepts - the array of content types that are available for selection.\n     * @returns {string} the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param {string} mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return {boolean} True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","    import { HttpUrlEncodingCodec } from '@angular/common/http';\n\n/**\n* CustomHttpUrlEncodingCodec\n* Fix plus sign (+) not encoding, so sent as blank space\n* See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n*/\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n    encodeKey(k: string): string {\n        k = super.encodeKey(k);\n        return k.replace(/\\+/gi, '%2B');\n    }\n    encodeValue(v: string): string {\n        v = super.encodeValue(v);\n        return v.replace(/\\+/gi, '%2B');\n    }\n}\n\n","export * from './api/api';\nexport * from './model/models';\nexport * from './variables';\nexport * from './configuration';\nexport * from './api.module';","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Configuration} from '../../../../api/configuration';\n\nexport function apiConfiguration(): Configuration {\n    const conf = new Configuration();\n    conf.withCredentials = true;\n    conf.basePath = generateBasePath();\n    return conf;\n}\n\nfunction generateBasePath() {\n    return '/api';\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpRequest} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {ToastService} from '../core/toast/toast.service';\nimport {ToastTypes} from '../core/toast/toast-types.enum';\n\n@Injectable()\nexport class ApiInterceptor {\n    constructor(private toastService: ToastService) {\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next\n            .handle(request)\n            .pipe(catchError(response => {\n                if (response.error) {\n                    this.toastService.showToast(response.error, ToastTypes.Error);\n                }\n                return throwError(response);\n            }));\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {SecurityModule} from './security/security.module';\nimport {DashboardModule} from './dashboard/dashboard.module';\nimport {AuthGuard} from './security/auth.guard';\nimport {LoginGuard} from './security/login.guard';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        canActivate: [AuthGuard],\n        loadChildren: () => DashboardModule\n    },\n    {\n        path: 'login',\n        canActivate: [LoginGuard],\n        loadChildren: () => SecurityModule\n    },\n    {\n        path: '**',\n        component: PageNotFoundComponent,\n        canActivate: [AuthGuard]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \":host {\\n  display: block;\\n  height: 100%;\\n  width: 100%; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {AuthGuard} from './security/auth.guard';\nimport {CoreModule} from './core/core.module';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {ApiInterceptor} from './api/api-interceptor';\nimport {ToastService} from './core/toast/toast.service';\nimport {AppRoutingModule} from './app-routing.module';\nimport {ApiModule} from '../../../api';\nimport {apiConfiguration} from './api/api-configuration';\nimport {LoginGuard} from './security/login.guard';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PageNotFoundComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        CoreModule,\n        ApiModule.forRoot(apiConfiguration)\n    ],\n    providers: [\n        AuthGuard,\n        LoginGuard,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ApiInterceptor,\n            multi: true,\n            deps: [ToastService]\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<button [type]=\\\"type\\\" (click)=\\\"onClick($event)\\\" [disabled]=\\\"disabled !== false\\\" [ngClass]=\\\"color\\\">\\n  <ng-content></ng-content>\\n</button>\"","module.exports = \":host button {\\n  position: relative;\\n  cursor: pointer;\\n  border-style: solid;\\n  border-radius: 1.25em;\\n  border-width: 1px;\\n  outline: none;\\n  box-shadow: none;\\n  height: 40px;\\n  padding: 0 30px;\\n  overflow: hidden;\\n  font-weight: 500;\\n  font-size: 1em;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 9.75em;\\n  transition: border-color 0.2s cubic-bezier(0.77, 0, 0.175, 1), background-color 0.2s cubic-bezier(0.77, 0, 0.175, 1), color 0.2s cubic-bezier(0.77, 0, 0.175, 1); }\\n  :host button.primary {\\n    background-color: #1874ef;\\n    color: #ffffff;\\n    border-color: #1874ef; }\\n  :host button.accent {\\n    background-color: #ffffff;\\n    color: #1874ef;\\n    border-color: #ffffff; }\\n  :host button.secondary {\\n    background-color: #acacac;\\n    color: #ffffff;\\n    border-color: #acacac; }\\n  :host button:disabled, :host button:disabled:hover {\\n    background: #BABCBF;\\n    border-color: #BABCBF;\\n    color: #ffffff;\\n    cursor: default; }\\n  :host button:hover {\\n    background-color: #3082f1;\\n    border-color: #3082f1; }\\n  :host button {\\n  width: 40px;\\n  height: 40px;\\n  padding: 0;\\n  border-radius: 50%; }\\n\"","import {Component, forwardRef} from '@angular/core';\nimport {ButtonComponent} from '../button/button.component';\n\n@Component({\n    selector: 'app-button-circle',\n    templateUrl: './button-circle.component.html',\n    styleUrls: ['./button-circle.component.scss'],\n    providers: [\n        {\n            provide: ButtonComponent, useExisting: forwardRef(() => ButtonCircleComponent)\n        }\n    ]\n})\nexport class ButtonCircleComponent extends ButtonComponent {\n\n    constructor() {\n        super();\n    }\n\n}\n","module.exports = \"<button [type]=\\\"type\\\" (click)=\\\"onClick($event)\\\" [disabled]=\\\"disabled !== false\\\" [ngClass]=\\\"color\\\">\\n    <i class=\\\"material-icons\\\">\\n        <ng-content></ng-content>\\n    </i>\\n</button>\"","module.exports = \":host button {\\n  position: relative;\\n  cursor: pointer;\\n  border-style: solid;\\n  border-radius: 1.25em;\\n  border-width: 1px;\\n  outline: none;\\n  box-shadow: none;\\n  height: 40px;\\n  padding: 0 30px;\\n  overflow: hidden;\\n  font-weight: 500;\\n  font-size: 1em;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 9.75em;\\n  transition: border-color 0.2s cubic-bezier(0.77, 0, 0.175, 1), background-color 0.2s cubic-bezier(0.77, 0, 0.175, 1), color 0.2s cubic-bezier(0.77, 0, 0.175, 1); }\\n  :host button.primary {\\n    background-color: #1874ef;\\n    color: #ffffff;\\n    border-color: #1874ef; }\\n  :host button.accent {\\n    background-color: #ffffff;\\n    color: #1874ef;\\n    border-color: #ffffff; }\\n  :host button.secondary {\\n    background-color: #acacac;\\n    color: #ffffff;\\n    border-color: #acacac; }\\n  :host button:disabled, :host button:disabled:hover {\\n    background: #BABCBF;\\n    border-color: #BABCBF;\\n    color: #ffffff;\\n    cursor: default; }\\n  :host button:hover {\\n    background-color: #3082f1;\\n    border-color: #3082f1; }\\n  :host button {\\n  background: none;\\n  border: none;\\n  width: 40px;\\n  padding: 0; }\\n  :host button.primary, :host button.accent, :host button.secondary {\\n    background: none; }\\n  :host button.primary {\\n    color: #1874ef; }\\n  :host button.primary:hover {\\n      background-color: rgba(24, 116, 239, 0.15);\\n      border-color: rgba(24, 116, 239, 0.15); }\\n  :host button.accent {\\n    color: #ffffff; }\\n  :host button.accent:hover {\\n      background-color: rgba(255, 255, 255, 0.15);\\n      border-color: rgba(255, 255, 255, 0.15); }\\n  :host button.secondary {\\n    color: #acacac; }\\n  :host button.secondary:hover {\\n      background-color: rgba(172, 172, 172, 0.15);\\n      border-color: rgba(172, 172, 172, 0.15); }\\n\"","import {Component, forwardRef, OnInit} from '@angular/core';\nimport {ButtonComponent} from '../button/button.component';\n\n@Component({\n    selector: 'app-button-icon',\n    templateUrl: './button-icon.component.html',\n    styleUrls: ['./button-icon.component.scss'],\n    providers: [\n        {\n            provide: ButtonComponent, useExisting: forwardRef(() => ButtonIconComponent)\n        }\n    ]\n})\nexport class ButtonIconComponent extends ButtonComponent implements OnInit {\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"<button [type]=\\\"type\\\" (click)=\\\"onClick($event)\\\" [disabled]=\\\"disabled !== false\\\" [ngClass]=\\\"color\\\">\\n    <ng-content></ng-content>\\n</button>\"","module.exports = \":host button {\\n  position: relative;\\n  cursor: pointer;\\n  border-style: solid;\\n  border-radius: 1.25em;\\n  border-width: 1px;\\n  outline: none;\\n  box-shadow: none;\\n  height: 40px;\\n  padding: 0 30px;\\n  overflow: hidden;\\n  font-weight: 500;\\n  font-size: 1em;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 9.75em;\\n  transition: border-color 0.2s cubic-bezier(0.77, 0, 0.175, 1), background-color 0.2s cubic-bezier(0.77, 0, 0.175, 1), color 0.2s cubic-bezier(0.77, 0, 0.175, 1); }\\n  :host button.primary {\\n    background-color: #1874ef;\\n    color: #ffffff;\\n    border-color: #1874ef; }\\n  :host button.accent {\\n    background-color: #ffffff;\\n    color: #1874ef;\\n    border-color: #ffffff; }\\n  :host button.secondary {\\n    background-color: #acacac;\\n    color: #ffffff;\\n    border-color: #acacac; }\\n  :host button:disabled, :host button:disabled:hover {\\n    background: #BABCBF;\\n    border-color: #BABCBF;\\n    color: #ffffff;\\n    cursor: default; }\\n  :host button:hover {\\n    background-color: #3082f1;\\n    border-color: #3082f1; }\\n\"","import {Component, EventEmitter, HostListener, Input, Output} from '@angular/core';\n\n@Component({\n    selector: 'app-button',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent {\n    @Input() public type: string = 'button';\n    @Input() public disabled: boolean = false;\n    @Input() public color: string = 'primary';\n    public clicked: boolean = false;\n\n    @HostListener('click', ['$event']) onHostClick(event) {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    @Output('click') click: EventEmitter<null> = new EventEmitter<null>();\n\n    constructor() {\n    }\n\n    onClick(event: Event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.click.emit(null);\n        this.clicked = true;\n        setTimeout(() => {\n            this.clicked = false;\n        });\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ButtonComponent} from './button/button.component';\nimport {ButtonCircleComponent} from './button-circle/button-circle.component';\nimport {ButtonIconComponent} from './button-icon/button-icon.component';\n\nconst COMPONENTS = [\n    ButtonComponent,\n    ButtonCircleComponent,\n    ButtonIconComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        ...COMPONENTS\n    ],\n    exports: [\n        ...COMPONENTS\n    ]\n})\nexport class ButtonsModule {\n}\n","module.exports = \"<ng-template #actionsContent>\\n    <ng-content></ng-content>\\n</ng-template>\\n\"","module.exports = \"\"","import {AfterContentInit, Component, ContentChild, ContentChildren, ElementRef, OnInit, QueryList, ViewChild} from '@angular/core';\nimport {ButtonComponent} from '../../buttons/button/button.component';\n\n@Component({\n    selector: 'app-card-actions',\n    templateUrl: './card-actions.component.html',\n    styleUrls: ['./card-actions.component.scss']\n})\nexport class CardActionsComponent implements OnInit, AfterContentInit {\n    @ViewChild('actionsContent') public actionsContent: ElementRef;\n    @ContentChildren(ButtonComponent) public buttons: QueryList<ButtonComponent>;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterContentInit() {\n        this.buttons\n            .map((button: ButtonComponent) => {\n                button.color = 'secondary';\n                return button;\n            });\n    }\n}\n","module.exports = \"<ng-template #contentContent>\\n    <ng-content></ng-content>\\n</ng-template>\\n\"","module.exports = \"\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n    selector: 'app-card-content',\n    templateUrl: './card-content.component.html',\n    styleUrls: ['./card-content.component.scss']\n})\nexport class CardContentComponent implements OnInit {\n    @ViewChild('contentContent') public contentContent: ElementRef;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"<ng-template #footerContent>\\n    <ng-content></ng-content>\\n</ng-template>\\n\"","module.exports = \"\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n    selector: 'app-card-footer',\n    templateUrl: './card-footer.component.html',\n    styleUrls: ['./card-footer.component.scss']\n})\nexport class CardFooterComponent implements OnInit {\n    @ViewChild('footerContent') public footerContent: ElementRef;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"<ng-template #headerContent>\\n    <ng-content></ng-content>\\n</ng-template>\"","module.exports = \"\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'app-card-header',\n  templateUrl: './card-header.component.html',\n  styleUrls: ['./card-header.component.scss']\n})\nexport class CardHeaderComponent implements OnInit {\n  @ViewChild('headerContent') public headerContent: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardComponent} from './card/card.component';\nimport {CardHeaderComponent} from './card-header/card-header.component';\nimport {CardContentComponent} from './card-content/card-content.component';\nimport {CardActionsComponent} from './card-actions/card-actions.component';\nimport { CardFooterComponent } from './card-footer/card-footer.component';\n\nconst COMPONENTS = [\n    CardComponent,\n    CardHeaderComponent,\n    CardContentComponent,\n    CardActionsComponent,\n    CardFooterComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        ...COMPONENTS\n    ],\n    exports: [\n        ...COMPONENTS\n    ]\n})\nexport class CardModule {\n}\n","module.exports = \"<div class=\\\"cardContainer\\\">\\n    <header *ngIf=\\\"header || actions\\\">\\n        <h2 *ngIf=\\\"header\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"header.headerContent\\\"></ng-container>\\n        </h2>\\n\\n        <div class=\\\"actions\\\" *ngIf=\\\"actions\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"actions.actionsContent\\\"></ng-container>\\n        </div>\\n    </header>\\n    <div class=\\\"content\\\" *ngIf=\\\"content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"content.contentContent\\\"></ng-container>\\n    </div>\\n    <footer *ngIf=\\\"footer\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"footer.footerContent\\\"></ng-container>\\n    </footer>\\n</div>\"","module.exports = \":host .cardContainer {\\n  background-color: #ffffff;\\n  padding: 10px 30px 25px;\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #e5e6eb;\\n  border-radius: 3px; }\\n  :host .cardContainer header {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between; }\\n  :host .cardContainer footer {\\n    display: flex;\\n    align-items: center;\\n    justify-content: flex-end; }\\n\"","import {Component, ContentChild, OnInit} from '@angular/core';\nimport {CardHeaderComponent} from '../card-header/card-header.component';\nimport {CardContentComponent} from '../card-content/card-content.component';\nimport {CardActionsComponent} from '../card-actions/card-actions.component';\nimport {CardFooterComponent} from '../card-footer/card-footer.component';\n\n@Component({\n    selector: 'app-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n    @ContentChild(CardHeaderComponent) public header: CardHeaderComponent;\n    @ContentChild(CardContentComponent) public content: CardContentComponent;\n    @ContentChild(CardActionsComponent) public actions: CardActionsComponent;\n    @ContentChild(CardFooterComponent) public footer: CardFooterComponent;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormModule} from './form/form.module';\nimport {ToastModule} from './toast/toast.module';\nimport {ButtonsModule} from './buttons/buttons.module';\nimport {CardModule} from './card/card.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nconst MODULES = [\n    FormModule,\n    ToastModule,\n    ButtonsModule,\n    CardModule\n];\n\nconst COMPONENTS = [\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ...MODULES\n    ],\n    declarations: [\n        ...COMPONENTS\n    ],\n    exports: [\n        ...MODULES,\n        ...COMPONENTS\n    ]\n})\nexport class CoreModule {\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable(<any>{\n    providedIn: 'root'\n})\nexport class CoreService {\n\n    constructor() {\n    }\n\n    public get loginPage(): string {\n        return 'login';\n    }\n\n    public get homePage(): string {\n        return '';\n    }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  base-form-control works!\\n</p>\\n\"","import {Component, HostBinding, Input, OnInit} from '@angular/core';\nimport {AbstractControl} from '@angular/forms';\n\n@Component({\n    selector: 'app-base-form-control',\n    templateUrl: './base-form-control.component.html',\n    styleUrls: ['./base-form-control.component.css']\n})\nexport class BaseFormControlComponent implements OnInit {\n    public control: AbstractControl;\n    private value: string = null;\n    @Input() public formControlName: string;\n    @HostBinding('class.focus') isFocused: boolean = false;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    writeValue(value) {\n        this.value = value;\n    }\n\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    onChange: any = () => {\n    }\n\n    onTouched: any = () => {\n    }\n\n\n    public onBlur() {\n        this.isFocused = true;\n    }\n\n    public onFocus() {\n        this.isFocused = false;\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BaseFormControlComponent} from './base-form-control/base-form-control.component';\nimport {InputComponent} from './input/input.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { LabelComponent } from './label/label.component';\nimport { FormComponent } from './form/form.component';\n\nconst COMPONENTS = [\n    InputComponent,\n    BaseFormControlComponent,\n    LabelComponent,\n    FormComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        ...COMPONENTS\n    ],\n    exports: [\n        ...COMPONENTS\n    ]\n})\nexport class FormModule {\n}\n","module.exports = \"<form [formGroup]=\\\"formGroup\\\" (submit)=\\\"onFormSubmit()\\\">\\n    <ng-content></ng-content>\\n</form>\"","module.exports = \"\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class FormComponent {\n\n    @Input('formGroup') public formGroup: FormGroup;\n    @Output('submit') public submit: EventEmitter<null> = new EventEmitter<null>();\n\n    constructor() {\n    }\n\n    public onFormSubmit(): void {\n        this.submit.emit(null);\n    }\n\n}\n","module.exports = \"<input [type]=\\\"type\\\" class=\\\"formInput\\\" [placeholder]=\\\"placeholder\\\" [formControl]=\\\"control\\\" [name]=\\\"formControlName\\\" (focus)=\\\"onFocus()\\\"\\n       (blur)=\\\"onBlur()\\\">\"","module.exports = \":host input {\\n  height: 30px;\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #e5e6eb;\\n  border-radius: 3px;\\n  width: 250px;\\n  max-width: 100%;\\n  margin-bottom: 15px;\\n  padding: 0 10px; }\\n\"","import {Component, forwardRef, Host, Input, OnInit, Optional, SkipSelf} from '@angular/core';\nimport {ControlContainer, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BaseFormControlComponent} from '../base-form-control/base-form-control.component';\n\n@Component({\n    selector: 'app-input',\n    templateUrl: './input.component.html',\n    styleUrls: ['./input.component.scss'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true}\n    ]\n})\nexport class InputComponent extends BaseFormControlComponent implements OnInit {\n    @Input() public type: string = 'text';\n    @Input() public placeholder: string = '';\n\n    constructor(@Optional() @Host() @SkipSelf() private controlContainer: ControlContainer) {\n        super();\n    }\n\n    ngOnInit() {\n        if (this.controlContainer) {\n            if (this.formControlName) {\n                this.control = this.controlContainer.control.get(this.formControlName);\n            }\n        }\n    }\n\n\n}\n","module.exports = \"<label *ngIf=\\\"label\\\">{{label}}: </label><ng-content></ng-content>\"","module.exports = \":host {\\n  display: flex; }\\n\"","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-label',\n    templateUrl: './label.component.html',\n    styleUrls: ['./label.component.scss']\n})\nexport class LabelComponent implements OnInit {\n\n    @Input('label') label: string = null;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","export enum ToastTypes {\n    Info = 'info',\n    Error = 'error',\n    Success = 'success'\n}\n","module.exports = \"<div class=\\\"toastContainer\\\" [ngClass]=\\\"type\\\">\\n    <p>\\n        {{message}}\\n    </p>\\n    <app-button-icon (click)=\\\"closeToast()\\\" color=\\\"accent\\\">clear</app-button-icon>\\n</div>\\n\"","module.exports = \":host {\\n  position: fixed;\\n  right: 0;\\n  bottom: 15px;\\n  left: 0;\\n  width: 650px;\\n  max-width: 90%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  margin: auto;\\n  z-index: 100;\\n  height: 52px;\\n  -webkit-animation-duration: 500ms;\\n          animation-duration: 500ms; }\\n  :host .toastContainer {\\n    position: relative;\\n    box-shadow: 0 15px 50px -15px rgba(0, 0, 0, 0.75);\\n    width: 100%;\\n    height: 100%;\\n    margin: auto;\\n    background-color: #1874ef;\\n    color: #ffffff;\\n    padding: 0 10px 0 25px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    overflow: hidden;\\n    border-radius: 3px;\\n    border-style: none;\\n    border-color: #1874ef;\\n    border-width: 1px; }\\n  :host .toastContainer.error {\\n      background-color: #e73636;\\n      border-color: #e73636; }\\n  :host .toastContainer.success {\\n      background-color: #40c33c;\\n      border-color: #40c33c; }\\n\"","import {AfterContentInit, AfterViewInit, Component, HostBinding, OnDestroy, OnInit} from '@angular/core';\nimport {Observable, ReplaySubject, Subscription, timer} from 'rxjs';\nimport {ToastTypes} from './toast-types.enum';\n\n@Component({\n    selector: 'app-toast',\n    templateUrl: './toast.component.html',\n    styleUrls: ['./toast.component.scss']\n})\nexport class ToastComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription = new Subscription();\n    private closeToastSubject: ReplaySubject<null> = new ReplaySubject<null>(1);\n    private lifeTimeTimerSub: Subscription;\n    public closeToast$: Observable<null> = this.closeToastSubject.asObservable();\n    public message: string = null;\n    public type: ToastTypes = ToastTypes.Info;\n    public lifeTimeSeconds: number = 3;\n    @HostBinding('class.animated')\n    @HostBinding('class.fadeInUp') animationIn: boolean = true;\n    @HostBinding('class.fadeOutDown') animationOut: boolean = false;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n        this.lifeTimeTimerSub = timer(this.lifeTimeSeconds * 1000)\n            .subscribe(() => {\n                this.closeToast();\n            });\n\n        this.subscriptions.add(this.lifeTimeTimerSub);\n    }\n\n    public closeToast() {\n        this.animationOut = true;\n\n        const closeToastAnimationTimer = timer(1000)\n            .subscribe(() => {\n                this.closeToastSubject.next(null);\n            });\n\n        this.subscriptions.add(closeToastAnimationTimer);\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ToastComponent} from './toast.component';\nimport {ButtonsModule} from '../buttons/buttons.module';\n\nconst COMPONENTS = [ToastComponent];\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ButtonsModule\n    ],\n    declarations: [\n        ...COMPONENTS\n    ],\n    entryComponents: [\n        ...COMPONENTS\n    ],\n    exports: [\n        ...COMPONENTS\n    ]\n})\nexport class ToastModule {\n    public static forRoot() {\n    }\n}\n","import {\n    ApplicationRef, ComponentFactoryResolver, ElementRef, EmbeddedViewRef, Injectable,\n    Injector\n} from '@angular/core';\nimport {ToastComponent} from './toast.component';\nimport {ToastTypes} from './toast-types.enum';\n\n@Injectable(<any>{\n    providedIn: 'root'\n})\nexport class ToastService {\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\n                private applicationRef: ApplicationRef,\n                private injector: Injector) {\n    }\n\n    public showToast(message: string, type?: ToastTypes): ToastComponent {\n        const componentRef = this.componentFactoryResolver\n            .resolveComponentFactory(ToastComponent)\n            .create(this.injector);\n\n        this.applicationRef.attachView(componentRef.hostView);\n\n        const domElem = (componentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n\n        document.body.appendChild(domElem);\n        componentRef.instance.message = message;\n        componentRef.instance.type = type;\n\n        const closeToastSub = componentRef.instance.closeToast$\n            .subscribe(() => {\n                this.applicationRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n                closeToastSub.unsubscribe();\n            });\n\n        return componentRef.instance;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {DashboardComponent} from './dashboard.component';\nimport {UsersModule} from './users/users.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DashboardComponent,\n        children: [\n            {\n                path: 'home',\n                component: HomeComponent\n            },\n            {\n                path: 'users',\n                loadChildren: () => UsersModule\n            },\n            {\n                path: '',\n                redirectTo: 'home',\n                pathMatch: 'full'\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class DashboardRoutingModule {\n}\n","module.exports = \"<app-top-bar></app-top-bar>\\n<app-menu>\\n    <app-menu-item path=\\\"/home\\\" label=\\\"Dashboard\\\" icon=\\\"dashboard\\\"></app-menu-item>\\n    <app-menu-item path=\\\"/users\\\" label=\\\"Users\\\" icon=\\\"group\\\"></app-menu-item>\\n</app-menu>\\n<div id=\\\"content\\\" [class.menu-closed]=\\\"menuService.menuOpen$ | async\\\">\\n    <div class=\\\"contentContainer\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n\\n\"","module.exports = \":host #content {\\n  height: 100%;\\n  min-height: 100%;\\n  transition: padding 500ms ease;\\n  padding-top: 100px;\\n  padding-left: 250px; }\\n  :host #content.menu-closed {\\n    padding-left: 75px; }\\n  :host #content .contentContainer {\\n    background-color: #f8f8f8;\\n    padding: 25px 50px;\\n    min-height: 100%; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {MenuService} from './layout/menu/menu/menu.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CoreService} from '../core/core.service';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n    constructor(public menuService: MenuService,\n                private coreService: CoreService,\n                private router: Router) {\n    }\n\n    ngOnInit() {\n        if(this.router.url === '/') {\n            this.router.navigate([this.coreService.homePage]);\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HomeComponent} from './home/home.component';\nimport {LayoutModule} from './layout/layout.module';\nimport {CoreModule} from '../core/core.module';\nimport {DashboardRoutingModule} from './dashboard-routing.module';\nimport {DashboardComponent} from './dashboard.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DashboardRoutingModule,\n        LayoutModule,\n        CoreModule\n    ],\n    declarations: [\n        HomeComponent,\n        DashboardComponent\n    ]\n})\nexport class DashboardModule {\n}\n","module.exports = \"<app-card>\\n    <app-card-header>\\n        Dashboard\\n    </app-card-header>\\n    <app-card-content>\\n        Hello!\\n    </app-card-content>\\n</app-card>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MenuModule} from './menu/menu.module';\nimport {TopBarComponent} from './top-bar/top-bar.component';\nimport {UserService} from '../../security/user/user.service';\nimport {CoreModule} from '../../core/core.module';\n\nconst COMPONENTS = [\n    TopBarComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MenuModule,\n        CoreModule\n    ],\n    declarations: [\n        ...COMPONENTS\n    ],\n    exports: [\n        ...COMPONENTS,\n        MenuModule\n    ],\n    providers: [\n        UserService\n    ]\n})\nexport class LayoutModule {\n}\n","module.exports = \"\\n\"","module.exports = \"\"","import {AfterContentInit, Component, ContentChild, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild} from '@angular/core';\n\n@Component({\n    selector: 'app-menu-item',\n    templateUrl: './menu-item.component.html',\n    styleUrls: ['./menu-item.component.scss']\n})\nexport class MenuItemComponent implements OnInit, AfterContentInit {\n\n    @Input() public path: string = '';\n    @Input() public label: string = '';\n    @Input() public icon: string = '';\n    @ViewChild('menuItemContent') menuItemContent: ElementRef;\n    @ViewChild('subMenuItemsContent') subMenuItemsContent: ElementRef;\n    @ContentChildren(MenuItemComponent) menuItemsContent: QueryList<MenuItemComponent>;\n    public menuItems: Array<MenuItemComponent>;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterContentInit() {\n        this.menuItems = this.menuItemsContent.filter((item, index) => {\n            return index > 0;\n        });\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MenuComponent} from './menu/menu.component';\nimport {MenuItemComponent} from './menu-item/menu-item.component';\nimport {RouterModule} from '@angular/router';\n\nconst COMPONENTS = [\n    MenuComponent,\n    MenuItemComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    declarations: [\n        ...COMPONENTS\n    ],\n    exports: [\n        ...COMPONENTS\n    ]\n})\nexport class MenuModule {\n}\n","module.exports = \"<div id=\\\"menu\\\" [class.closed]=\\\"menuService.menuOpen$ | async\\\">\\n    <div class=\\\"logo\\\">\\n        <span>DD</span>Managment\\n    </div>\\n    <nav>\\n        <div class=\\\"marker\\\" [ngStyle]=\\\"{'transform': 'translate3d(0, ' + markerOffset + 'px, 0)'}\\\"\\n             [class.markerActive]=\\\"markerActive\\\" #marker></div>\\n        <ul>\\n            <li *ngFor=\\\"let menuItem of menuItems\\\" routerLinkActive=\\\"active\\\" #link>\\n                <a [routerLink]=\\\"parentPath + menuItem.path\\\"><i class=\\\"material-icons\\\">{{menuItem.icon}}</i>{{menuItem.label}}</a>\\n\\n                <ul *ngIf=\\\"menuItem.menuItems.length\\\">\\n                    <li *ngFor=\\\"let subItem of menuItem.menuItems\\\">\\n                        <a [routerLink]=\\\"parentPath + subItem.path\\\">{{subItem.label}}</a>\\n\\n                        <ul *ngIf=\\\"subItem.menuItems.length\\\">\\n                            <li *ngFor=\\\"let subSubItem of subItem.menuItems\\\">\\n                                <a [routerLink]=\\\"parentPath + subSubItem.path\\\">{{subSubItem.label}}</a>\\n\\n                                <ul *ngIf=\\\"subSubItem.menuItems.length\\\">\\n                                    <li *ngFor=\\\"let subSubSubItem of subSubItem.menuItems\\\">\\n                                        <a [routerLink]=\\\"parentPath + subSubSubItem.path\\\">{{subSubSubItem.label}}</a>\\n                                    </li>\\n                                </ul>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                </ul>\\n            </li>\\n        </ul>\\n    </nav>\\n</div>\\n\"","module.exports = \":host #menu {\\n  position: fixed;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  width: 250px;\\n  padding-top: 100px;\\n  background-color: #ffffff;\\n  z-index: 99;\\n  overflow: hidden;\\n  transition: width 500ms ease;\\n  border-right-style: solid;\\n  border-right-width: 1px;\\n  border-right-color: #e5e6eb; }\\n  :host #menu.closed {\\n    width: 75px; }\\n  :host #menu .logo {\\n    position: absolute;\\n    top: 0;\\n    right: -1px;\\n    left: 0;\\n    height: 100px;\\n    background-color: #1874ef;\\n    color: #ffffff;\\n    font-weight: 500;\\n    font-size: 1.5rem;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center; }\\n  :host #menu .logo span {\\n      font-weight: 700; }\\n  :host #menu nav {\\n    display: block;\\n    position: relative; }\\n  :host #menu nav .marker {\\n      position: absolute;\\n      top: 0;\\n      right: 0;\\n      height: 2rem;\\n      width: 4px;\\n      background-color: #1874ef;\\n      opacity: 0; }\\n  :host #menu nav .marker.markerActive {\\n        transition: all 250ms ease;\\n        opacity: 1; }\\n  :host #menu nav ul {\\n      display: block;\\n      list-style: none;\\n      padding-top: 10px;\\n      padding-left: 0; }\\n  :host #menu nav ul li {\\n        display: block;\\n        padding: 0;\\n        margin: 0;\\n        line-height: 50px;\\n        font-weight: 500; }\\n  :host #menu nav ul li.active a {\\n          color: #1874ef; }\\n  :host #menu nav ul li a {\\n          display: flex;\\n          align-items: center;\\n          padding-left: 30px;\\n          transition: all 250ms ease;\\n          color: #acacac; }\\n  :host #menu nav ul li a .material-icons {\\n            width: 25px;\\n            margin-top: -5px;\\n            margin-right: 15px; }\\n  :host #menu nav ul li a:hover {\\n            color: #1874ef; }\\n\"","import {\n    AfterViewInit, Component, ContentChildren, ElementRef, Input, OnDestroy, OnInit, QueryList, ViewChild,\n    ViewChildren\n} from '@angular/core';\nimport {MenuItemComponent} from '../menu-item/menu-item.component';\nimport {NavigationCancel, NavigationEnd, NavigationError, Router} from '@angular/router';\nimport {Subscription} from 'rxjs/index';\nimport {MenuService} from './menu.service';\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit, AfterViewInit, OnDestroy {\n    @Input('parentPath') public parentPath: string = '';\n    @ContentChildren(MenuItemComponent) public menuItems: QueryList<MenuItemComponent>;\n    @ViewChild('marker') private marker: ElementRef;\n    @ViewChildren('link') private linkElements: QueryList<ElementRef>;\n    public markerOffset: number = 0;\n    public markerActive: boolean = false;\n    private routerEventSubscription: Subscription = new Subscription();\n\n    constructor(private router: Router,\n                public menuService: MenuService) {\n    }\n\n    ngOnInit() {\n        this.routerEventSubscription = this.router.events\n            .subscribe((routerEvent: any) => {\n                this.onRouterEvent(routerEvent);\n            });\n    }\n\n    ngAfterViewInit() {\n        this.handleActiveElement();\n    }\n\n    private onRouterEvent(routerEvent: Event): void {\n        if (routerEvent instanceof NavigationEnd ||\n            routerEvent instanceof NavigationCancel ||\n            routerEvent instanceof NavigationError) {\n            this.handleActiveElement();\n        }\n    }\n\n    private handleActiveElement() {\n        setTimeout(() => {\n            let activeElement: ElementRef = this.linkElements\n                .find((element: ElementRef | any) => {\n                    return element.nativeElement.classList.contains('active');\n                });\n\n            if (!activeElement) {\n                activeElement = this.linkElements.first;\n                this.markerActive = false;\n                return;\n            }\n\n            this.markerOffset = this.getMarkerOffset(activeElement.nativeElement);\n            setTimeout(() => {\n                this.markerActive = true;\n            });\n        });\n    }\n\n    private getMarkerOffset(target: any): number {\n        return target.offsetTop + (target.offsetHeight / 2) - this.marker.nativeElement.clientHeight / 2;\n    }\n\n    ngOnDestroy() {\n        if (this.routerEventSubscription) {\n            this.routerEventSubscription.unsubscribe();\n        }\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs/index';\n\n@Injectable(<any>{\n    providedIn: 'root'\n})\nexport class MenuService {\n    private menuOpenSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    public menuOpen$: Observable<boolean> = this.menuOpenSubject.asObservable();\n\n    constructor() {\n    }\n\n    public toggleMenu() {\n        this.menuOpenSubject.next(!this.menuOpenSubject.getValue());\n    }\n}\n","module.exports = \"<div id=\\\"top-bar\\\" [class.menu-closed]=\\\"menuService.menuOpen$ | async\\\">\\n    <app-button-icon class=\\\"menu-toggle\\\" (click)=\\\"menuToggle()\\\" color=\\\"secondary\\\">arrow_back</app-button-icon>\\n\\n    <button class=\\\"user-profile-button\\\" (click)=\\\"userProfileDropdownToggle()\\\" #userProfileButton>\\n        <span class=\\\"initials\\\">\\n            {{initials}}\\n        </span>\\n        <i class=\\\"material-icons\\\">keyboard_arrow_down</i>\\n    </button>\\n\\n    <div class=\\\"user-profile-dropdown animated fadeIn\\\" *ngIf=\\\"userProfileDropdownVisible\\\" #userProfileDropdown>\\n        <app-button (click)=\\\"logout()\\\">\\n            Logout\\n        </app-button>\\n    </div>\\n</div>\\n\\n\"","module.exports = \":host #top-bar {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  height: 100px;\\n  z-index: 98;\\n  padding-left: 250px;\\n  background-color: #ffffff;\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end;\\n  padding-right: 50px;\\n  transition: padding 500ms ease;\\n  border-bottom-style: solid;\\n  border-bottom-width: 1px;\\n  border-bottom-color: #e5e6eb; }\\n  :host #top-bar.menu-closed {\\n    padding-left: 75px; }\\n  :host #top-bar.menu-closed .menu-toggle {\\n      -webkit-transform: scale(-1, 1);\\n              transform: scale(-1, 1); }\\n  :host #top-bar .menu-toggle {\\n    margin-right: auto;\\n    margin-left: 10px;\\n    transition: all 250ms ease; }\\n  :host #top-bar .user-profile-button {\\n    background: none;\\n    display: flex;\\n    align-items: center;\\n    border-style: none;\\n    cursor: pointer;\\n    margin-right: -30px; }\\n  :host #top-bar .user-profile-button .initials {\\n      width: 40px;\\n      height: 40px;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      padding: 0;\\n      position: relative;\\n      background-color: #1874ef;\\n      color: #ffffff;\\n      border-style: solid;\\n      border-radius: 50%;\\n      border-width: 1px;\\n      border-color: #1874ef;\\n      outline: none;\\n      box-shadow: none;\\n      overflow: hidden;\\n      font-weight: 500;\\n      font-size: 1em;\\n      -webkit-user-select: none;\\n         -moz-user-select: none;\\n          -ms-user-select: none;\\n              user-select: none;\\n      transition: border-color 0.2s cubic-bezier(0.77, 0, 0.175, 1), background-color 0.2s cubic-bezier(0.77, 0, 0.175, 1), color 0.2s cubic-bezier(0.77, 0, 0.175, 1); }\\n  :host #top-bar .user-profile-button .material-icons {\\n      color: #acacac;\\n      font-size: 1.3em;\\n      width: 30px;\\n      display: flex;\\n      justify-content: flex-end; }\\n  :host #top-bar .user-profile-button:hover .initials {\\n      background-color: #3082f1;\\n      border-color: #3082f1; }\\n  :host #top-bar .user-profile-dropdown {\\n    position: absolute;\\n    top: 90px;\\n    box-shadow: 0 20px 80px -25px rgba(0, 0, 0, 0.75);\\n    right: 30px;\\n    width: 300px;\\n    padding: 30px;\\n    background-color: #ffffff;\\n    display: flex;\\n    justify-content: flex-end;\\n    -webkit-animation-duration: 500ms;\\n            animation-duration: 500ms;\\n    border-color: #e5e6eb;\\n    border-width: 1px;\\n    border-style: solid;\\n    border-radius: 3px; }\\n  :host #top-bar .user-profile-dropdown:before, :host #top-bar .user-profile-dropdown:after {\\n      position: absolute;\\n      content: '';\\n      width: 0;\\n      height: 0;\\n      border-style: solid;\\n      border-color: transparent transparent #ffffff transparent; }\\n  :host #top-bar .user-profile-dropdown:before {\\n      border-color: transparent transparent #e5e6eb transparent;\\n      border-width: 10px;\\n      right: 37px;\\n      top: -20px; }\\n  :host #top-bar .user-profile-dropdown:after {\\n      border-color: transparent transparent #ffffff transparent;\\n      border-width: 11px;\\n      right: 36px;\\n      top: -20px; }\\n\"","import {Component, ElementRef, HostListener, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {SecurityService} from '../../../security/security.service';\nimport {Router} from '@angular/router';\nimport {UserService} from '../../../security/user/user.service';\nimport {CurrentUserView} from '../../../../../../api';\nimport {Subscription} from 'rxjs/index';\nimport {MenuService} from '../menu/menu/menu.service';\nimport {CoreService} from '../../../core/core.service';\n\n@Component({\n    selector: 'app-top-bar',\n    templateUrl: './top-bar.component.html',\n    styleUrls: ['./top-bar.component.scss']\n})\nexport class TopBarComponent implements OnInit, OnDestroy {\n\n    public initials: string = null;\n    private subscriptions: Subscription = new Subscription();\n    public userProfileDropdownVisible: boolean = false;\n\n    @ViewChild('userProfileDropdown') private userProfileDropdown: ElementRef;\n    @ViewChild('userProfileButton') private userProfileButton: ElementRef;\n    @HostListener('document:click', ['$event'])\n    onDocumentClick(event) {\n        if (!this.userProfileDropdownVisible || this.userProfileButton.nativeElement.contains(event.target)) {\n            return;\n        }\n\n        if (!this.userProfileDropdown.nativeElement.contains(event.target)) {\n            this.userProfileDropdownHide();\n        }\n    }\n\n    constructor(private securityService: SecurityService,\n                private userService: UserService,\n                private router: Router,\n                private coreService: CoreService,\n                public menuService: MenuService) {\n    }\n\n    ngOnInit() {\n        const currentUserSub = this.userService.currentUser\n            .subscribe((user: CurrentUserView) => {\n                this.setUserInitials(user);\n            });\n\n        this.subscriptions.add(currentUserSub);\n    }\n\n    public logout(): void {\n        this.userProfileDropdownHide();\n        const logoutHandlerSub = this.securityService.logoutHandler()\n            .subscribe(() => {\n                this.router.navigate([this.coreService.loginPage]);\n            });\n\n        this.subscriptions.add(logoutHandlerSub);\n    }\n\n    private setUserInitials(user: CurrentUserView): void {\n        if (user.firstname && user.surname) {\n            this.initials = user.firstname.charAt(0) + user.surname.charAt(0);\n        } else {\n            this.initials = user.username.substring(0, 2);\n        }\n\n        this.initials.toUpperCase();\n    }\n\n    public menuToggle() {\n        this.menuService.toggleMenu();\n    }\n\n    public userProfileDropdownToggle() {\n        this.userProfileDropdownVisible = !this.userProfileDropdownVisible;\n    }\n\n    private userProfileDropdownHide() {\n        this.userProfileDropdownVisible = false;\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n\n}\n","module.exports = \"<app-card>\\n  <app-card-header>\\n    Edit user\\n  </app-card-header>\\n  <app-card-content>\\n    <app-form [formGroup]=\\\"formGroup\\\">\\n      <app-label label=\\\"Username\\\">\\n        <app-input formControlName=\\\"username\\\"></app-input>\\n      </app-label>\\n      <app-label label=\\\"Password\\\">\\n        <app-input formControlName=\\\"password\\\" type=\\\"password\\\"></app-input>\\n      </app-label>\\n      <app-label label=\\\"Firstname\\\">\\n        <app-input formControlName=\\\"firstname\\\"></app-input>\\n      </app-label>\\n      <app-label label=\\\"Surname\\\">\\n        <app-input formControlName=\\\"surname\\\"></app-input>\\n      </app-label>\\n    </app-form>\\n  </app-card-content>\\n  <app-card-footer>\\n    <app-button (click)=\\\"saveUser()\\\">Save</app-button>\\n  </app-card-footer>\\n</app-card>\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n    selector: 'app-users-edit',\n    templateUrl: './users-edit.component.html',\n    styleUrls: ['./users-edit.component.scss']\n})\nexport class UsersEditComponent implements OnInit {\n\n    public formGroup: FormGroup;\n\n    constructor(private formBuilder: FormBuilder) {\n    }\n\n    ngOnInit() {\n        this.formGroup = this.formBuilder.group({\n            username: new FormControl(null, {validators: Validators.required}),\n            password: new FormControl(null, {validators: Validators.required}),\n            firstname: new FormControl(null, {}),\n            surname: new FormControl(null, {}),\n        });\n    }\n\n\n    public saveUser() {\n\n    }\n}\n","module.exports = \"<app-card>\\n    <app-card-header>\\n        Users\\n    </app-card-header>\\n    <app-card-actions>\\n        <app-button-icon routerLink=\\\"/users/new\\\">\\n            add\\n        </app-button-icon>\\n    </app-card-actions>\\n    <app-card-content>\\n        <ul>\\n            <li *ngFor=\\\"let user of usersList | async\\\">\\n                <a routerLink=\\\"/users/{{user.id}}\\\">{{user.username}} | {{user.firstname}} | {{user.surname}}</a>\\n            </li>\\n        </ul>\\n    </app-card-content>\\n</app-card>\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\nimport {UsersListService} from './users-list.service';\nimport {Observable} from 'rxjs/index';\nimport {UsersListView} from '../../../../../../api/model/usersListView';\n\n@Component({\n    selector: 'app-users-list',\n    templateUrl: './users-list.component.html',\n    styleUrls: ['./users-list.component.scss']\n})\nexport class UsersListComponent implements OnInit {\n    public usersList: Observable<UsersListView>;\n\n    constructor(private usersListService: UsersListService) {\n    }\n\n    ngOnInit() {\n        this.usersList = this.usersListService.getUsersList();\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {UsersService} from '../../../../../../api';\nimport {Observable} from 'rxjs/index';\nimport {UsersListView} from '../../../../../../api/model/usersListView';\n\n@Injectable(<any>{\n    providedIn: 'root'\n})\nexport class UsersListService {\n\n    constructor(private usersService: UsersService) {\n    }\n\n    getUsersList(page?: number, count?: number, sortDirection?: string, sortOrder?: string): Observable<UsersListView> {\n        return this.usersService.usersListQuery(page, count, sortDirection, sortOrder);\n    }\n\n}\n","module.exports = \"<app-card>\\n    <app-card-header>\\n        Add new user\\n    </app-card-header>\\n    <app-card-content>\\n        <app-form [formGroup]=\\\"formGroup\\\">\\n            <app-label label=\\\"Username\\\">\\n                <app-input formControlName=\\\"username\\\"></app-input>\\n            </app-label>\\n            <app-label label=\\\"Password\\\">\\n                <app-input formControlName=\\\"password\\\" type=\\\"password\\\"></app-input>\\n            </app-label>\\n            <app-label label=\\\"Firstname\\\">\\n                <app-input formControlName=\\\"firstname\\\"></app-input>\\n            </app-label>\\n            <app-label label=\\\"Surname\\\">\\n                <app-input formControlName=\\\"surname\\\"></app-input>\\n            </app-label>\\n        </app-form>\\n    </app-card-content>\\n    <app-card-footer>\\n        <app-button (click)=\\\"saveUser()\\\">Save</app-button>\\n    </app-card-footer>\\n</app-card>\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {UsersNewService} from './users-new.service';\nimport {Router} from '@angular/router';\nimport {ToastService} from '../../../core/toast/toast.service';\nimport {ToastTypes} from '../../../core/toast/toast-types.enum';\n\n@Component({\n    selector: 'app-users-new',\n    templateUrl: './users-new.component.html',\n    styleUrls: ['./users-new.component.scss']\n})\nexport class UsersNewComponent implements OnInit {\n\n    public formGroup: FormGroup;\n\n    constructor(private formBuilder: FormBuilder,\n                private usersNewService: UsersNewService,\n                private router: Router,\n                private toastService: ToastService) {\n    }\n\n    ngOnInit() {\n        this.formGroup = this.formBuilder.group({\n            username: new FormControl(null, {validators: Validators.required}),\n            password: new FormControl(null, {validators: Validators.required}),\n            firstname: new FormControl(null, {}),\n            surname: new FormControl(null, {}),\n        });\n    }\n\n    public saveUser() {\n        this.usersNewService.saveUser(this.formGroup.getRawValue())\n            .subscribe(() => {\n                this.router.navigate(['/users']);\n                this.toastService.showToast('User created', ToastTypes.Success);\n            });\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {UsersService} from '../../../../../../api';\nimport {UserNew} from '../../../../../../api/model/userNew';\nimport {Observable} from 'rxjs/index';\n\n@Injectable(<any>{\n    providedIn: 'root'\n})\nexport class UsersNewService {\n\n    constructor(private usersService: UsersService) {\n    }\n\n    public saveUser(content: UserNew): Observable<any> {\n        return this.usersService.userNewHandler(content);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {UsersListComponent} from './users-list/users-list.component';\nimport {UsersNewComponent} from './users-new/users-new.component';\nimport {UsersEditComponent} from './users-edit/users-edit.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: UsersListComponent\n    },\n    {\n        path: 'new',\n        component: UsersNewComponent\n    },\n    {\n        path: ':id',\n        component: UsersEditComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UsersRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {UsersListComponent} from './users-list/users-list.component';\nimport {CoreModule} from '../../core/core.module';\nimport {UsersRoutingModule} from './users-routing.module';\nimport { UsersNewComponent } from './users-new/users-new.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { UsersEditComponent } from './users-edit/users-edit.component';\n\nconst COMPONENTS = [\n    UsersListComponent,\n    UsersNewComponent,\n    UsersEditComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        CoreModule,\n        UsersRoutingModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        ...COMPONENTS\n    ]\n})\nexport class UsersModule {\n}\n","module.exports = \"<app-card>\\n  <app-card-header>\\n    Page not found\\n  </app-card-header>\\n  <app-card-content>\\n    <p>The page you are looking for doesn't exist.</p>\\n    <p>Back to <a [routerLink]=\\\"homePagePath\\\">home page</a></p>\\n  </app-card-content>\\n</app-card>\\n\"","module.exports = \":host {\\n  padding: 30px;\\n  display: block;\\n  height: 100%;\\n  background-color: #f8f8f8; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {CoreService} from '../core/core.service';\n\n@Component({\n    selector: 'app-page-not-found',\n    templateUrl: './page-not-found.component.html',\n    styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n    public homePagePath: string = '/';\n\n    constructor(private coreService: CoreService) {\n    }\n\n    ngOnInit() {\n        this.homePagePath = this.coreService.homePage;\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {UserService} from './user/user.service';\nimport {map} from 'rxjs/operators';\nimport {CoreService} from '../core/core.service';\n\n@Injectable(<any>{\n    provideIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(private router: Router,\n                private coreService: CoreService,\n                private userService: UserService) {\n\n    }\n\n    canActivate(route: ActivatedRouteSnapshot,\n                state: RouterStateSnapshot): Observable<boolean> {\n        return this.userService.checkCurrentUser()\n            .pipe(map((value: boolean) => {\n                if (!value) {\n                    this.router.navigate([this.coreService.loginPage]);\n                }\n                return value;\n            }));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {UserService} from './user/user.service';\nimport {CoreService} from '../core/core.service';\nimport {map} from 'rxjs/operators';\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n    constructor(private router: Router,\n                private userService: UserService,\n                private coreService: CoreService) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot,\n                state: RouterStateSnapshot): Observable<boolean> {\n        return this.userService.checkCurrentUser()\n            .pipe(map((value: boolean) => {\n                if (value) {\n                    this.router.navigate([this.coreService.homePage]);\n                }\n                return !value;\n            }));\n    }\n}\n","module.exports = \"<div class=\\\"logo\\\">\\n    <span>DD</span>Managment\\n</div>\\n\\n<div class=\\\"login-container\\\">\\n    <app-form [formGroup]=\\\"formGroup\\\" [ngClass]=\\\"{'animated shake': wrongCredentials}\\\">\\n        <h2>Hello!</h2>\\n        <app-label>\\n            <app-input placeholder=\\\"username\\\" formControlName=\\\"username\\\"></app-input>\\n        </app-label>\\n        <app-label>\\n            <app-input type=\\\"password\\\" placeholder=\\\"password\\\" formControlName=\\\"password\\\"></app-input>\\n        </app-label>\\n        <div>\\n            <app-button type=\\\"submit\\\" (click)=\\\"onFormSubmit()\\\" [disabled]=\\\"!formGroup.valid\\\">Sign In</app-button>\\n        </div>\\n    </app-form>\\n</div>\\n\\n<div class=\\\"copyright\\\">\\n    Photo by Adam Chang on Unsplash\\n</div>\"","module.exports = \":host {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  background-image: url('adam-chang-231299-unsplash.jpg');\\n  background-color: #f8f8f8;\\n  background-size: cover;\\n  background-position: center;\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n  justify-content: flex-end;\\n  align-content: center;\\n  align-items: center; }\\n  :host .logo {\\n    position: absolute;\\n    top: 25px;\\n    left: 25px;\\n    font-weight: 500;\\n    font-size: 1.5rem;\\n    color: #ffffff;\\n    text-shadow: 0px 2px 10px rgba(0, 0, 0, 0.35); }\\n  :host .logo span {\\n      color: #1874ef;\\n      font-weight: 700; }\\n  :host .copyright {\\n    position: absolute;\\n    bottom: 15px;\\n    left: 20px;\\n    font-size: .75rem; }\\n  :host .login-container {\\n    order: 0;\\n    flex: 0 1 50%;\\n    align-self: auto;\\n    display: flex;\\n    align-content: center;\\n    align-items: center;\\n    justify-content: center; }\\n  :host .login-container app-form {\\n      -webkit-animation-duration: 750ms;\\n              animation-duration: 750ms;\\n      background-color: #ffffff;\\n      padding: 10px 40px 30px;\\n      box-shadow: 0 20px 80px -25px rgba(0, 0, 0, 0.75);\\n      border-style: solid;\\n      border-width: 1px;\\n      border-color: #e5e6eb;\\n      border-radius: 3px; }\\n  :host .login-container app-form h2 {\\n        padding: 0 10px; }\\n  :host .login-container app-form /deep/ app-input input {\\n        border-top: none;\\n        border-right: none;\\n        border-left: none;\\n        border-radius: 3; }\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../user/user.service';\nimport {Router} from '@angular/router';\nimport {SecurityService} from '../security.service';\nimport {CoreService} from '../../core/core.service';\nimport {Subscription} from 'rxjs/index';\nimport {ToastService} from '../../core/toast/toast.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n    public formGroup: FormGroup;\n    public wrongCredentials: boolean = false;\n    private loginHandlerSubsription: Subscription = new Subscription();\n\n    constructor(private formBuilder: FormBuilder,\n                private securityService: SecurityService,\n                private userService: UserService,\n                private router: Router,\n                private toastService: ToastService,\n                private coreService: CoreService) {\n    }\n\n    ngOnInit() {\n        this.formGroup = this.formBuilder.group({\n            username: new FormControl(null, Validators.required),\n            password: new FormControl(null, Validators.required)\n        });\n    }\n\n    public onFormSubmit() {\n        this.wrongCredentials = false;\n        this.loginHandlerSubsription = this.securityService.loginHandler(this.formGroup.getRawValue())\n            .subscribe(() => {\n                this.userService.checkCurrentUser()\n                    .subscribe(value => {\n                        if (value) {\n                            this.toastService.showToast('Welcome back! You have been logged in.');\n                            this.router.navigate([this.coreService.homePage]);\n                        }\n                    });\n            }, err => {\n                if (err.status === 403) {\n                    this.wrongCredentials = true;\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        if (this.loginHandlerSubsription) {\n            this.loginHandlerSubsription.unsubscribe();\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {SecurityComponent} from './security.component';\nimport {LoginComponent} from './login/login.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SecurityComponent,\n        children: [\n            {\n                path: '',\n                component: LoginComponent\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class SecurityRoutingModule {\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \":host {\\n  display: block;\\n  width: 100%;\\n  height: 100%; }\\n\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-security',\n    templateUrl: './security.component.html',\n    styleUrls: ['./security.component.scss']\n})\nexport class SecurityComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginComponent} from './login/login.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SecurityService as SecurityApiService} from '../../../../api';\nimport {RouterModule} from '@angular/router';\nimport {SecurityComponent} from './security.component';\nimport {UserService} from './user/user.service';\nimport {SecurityService} from './security.service';\nimport {CoreModule} from '../core/core.module';\nimport {SecurityRoutingModule} from './security-routing.module';\n\nconst COMPONENTS = [\n    LoginComponent,\n    SecurityComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SecurityRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule\n    ],\n    declarations: [\n        ...COMPONENTS\n    ],\n    providers: [\n        SecurityApiService,\n        UserService,\n        SecurityService\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class SecurityModule {\n}\n","import {Injectable} from '@angular/core';\nimport {LoginParameters, SecurityService as SecurityApiService} from '../../../../api';\nimport {Observable, ReplaySubject} from 'rxjs';\nimport {UserService} from './user/user.service';\n\n@Injectable(<any>{\n    providedIn: 'root'\n})\nexport class SecurityService {\n    constructor(private securityApiService: SecurityApiService,\n                private userService: UserService) {\n    }\n\n    public loginHandler(content: LoginParameters): Observable<any> {\n        return this.securityApiService.loginHandler(content);\n    }\n\n    public logoutHandler(): Observable<any> {\n        const subject: ReplaySubject<null> = new ReplaySubject<null>(1);\n        this.userService.clearUser();\n        this.securityApiService.logoutHandler()\n            .subscribe(() => {\n                subject.next(null);\n            }, () => {\n                subject.next(null);\n            });\n\n        return subject;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {CurrentUserView, SecurityService as SecurityApiService} from '../../../../../api';\nimport {Observable, ReplaySubject, of} from 'rxjs';\n\n@Injectable(<any>{\n    providedIn: 'root'\n})\nexport class UserService {\n    private currentUserValue: CurrentUserView = null;\n\n    constructor(private securityApiService: SecurityApiService) {\n    }\n\n    get currentUser(): Observable<CurrentUserView | null> {\n        if (this.currentUserValue) {\n            return of(this.currentUserValue);\n        }\n\n        return this.getUserData();\n\n    }\n\n    private setUser(userData: CurrentUserView) {\n        this.currentUserValue = userData;\n    }\n\n\n    private getUserData(): Observable<CurrentUserView> {\n        const subject: ReplaySubject<CurrentUserView> = new ReplaySubject<CurrentUserView>(1);\n        this.securityApiService.currentUserQuery()\n            .subscribe(userData => {\n                this.setUser(userData);\n                subject.next(this.currentUserValue);\n            }, () => {\n                this.clearUser();\n                subject.next(null);\n            });\n\n        return subject;\n    }\n\n    public clearUser() {\n        this.setUser(null);\n    }\n\n    public checkCurrentUser(): Observable<boolean> {\n        const subject: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\n\n        this.currentUser\n            .subscribe(user => {\n                if (user) {\n                    return subject.next(true);\n                }\n                return subject.next(false);\n            });\n\n        return subject;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}